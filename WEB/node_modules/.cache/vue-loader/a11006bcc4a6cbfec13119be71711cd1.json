{"remainingRequest":"E:\\Github\\Project_QLQ_DHXSKD\\WEB\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\Github\\Project_QLQ_DHXSKD\\WEB\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\Github\\Project_QLQ_DHXSKD\\WEB\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Github\\Project_QLQ_DHXSKD\\WEB\\src\\views\\Quyen_baocao.vue?vue&type=template&id=968a99c8&","dependencies":[{"path":"E:\\Github\\Project_QLQ_DHXSKD\\WEB\\src\\views\\Quyen_baocao.vue","mtime":1606397244780},{"path":"E:\\Github\\Project_QLQ_DHXSKD\\WEB\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1606397240015},{"path":"E:\\Github\\Project_QLQ_DHXSKD\\WEB\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1606397243917},{"path":"E:\\Github\\Project_QLQ_DHXSKD\\WEB\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1606397240015},{"path":"E:\\Github\\Project_QLQ_DHXSKD\\WEB\\node_modules\\vue-loader\\lib\\index.js","mtime":1606397243917}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}